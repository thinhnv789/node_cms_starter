extends ../layout/default

block stylesheets
    link(rel='stylesheet', href='/libs/bootstrap-chosen/bootstrap-chosen.css')
    link(rel='stylesheet', href='/libs/bootstrap-table/dist/bootstrap-table.min.css')

block content
    // Content Header (Page header)
    section.content-header
      h1
        | Danh sách tài khoản
        small Ahihi
      ol.breadcrumb
        li
          a(href='/')
            i.fa.fa-dashboard
            |  Dashboard
        li.active Tài khoản
    // Main content
    section.content
        .row
            .col-xs-12
                .box
                    // /.box-header
                    .box-body.table-responsive.no-padding
                        #toolbar
                            a.btn.btn-success(href='/account/create') Tạo mới
                            button#remove.btn.btn-danger(disabled='') Delete
                        table#table(data-toolbar='#toolbar', data-search='true', data-show-refresh='false', data-show-toggle='false', data-show-columns='true', data-show-export='true', data-detail-view='true', data-detail-formatter='detailFormatter', data-minimum-count-columns='2', data-show-pagination-switch='false', data-pagination='true', data-id-field='id', data-page-size='15', data-page-list='[15, 25, 50, 100, ALL]', data-side-pagination='server', data-url='http://issues.wenzhixin.net.cn/examples/bootstrap_table/data', data-response-handler='responseHandler')

block javascripts
    script(type='text/javascript', src='/libs/bootstrap-table/dist/bootstrap-table.min.js')
    script(type='text/javascript', src='/libs/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js')
    script(type='text/javascript', src='/libs/bootstrap-table/dist/extensions/editable/bootstrap-table-editable.min.js')
    script(type='text/javascript', src='/libs/bootstrap-table/dist/extensions/export/bootstrap-table-export.min.js')
    script(type='text/javascript', src='/libs/bootstrap-chosen/dist/chosen.jquery-1.4.2/chosen.jquery.min.js')
    script(src='/javascripts/tableExport.js')
    script(src='/javascripts/select-option.js')
    script.
        const $table = $('#table');
        const $remove = $('#remove');
        let selections = [];
        function initTable() {
            $table.bootstrapTable({
            height: getHeight(),
            columns: [
                [
                    {
                        field: 'state',
                        checkbox: true,
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle'
                    }, {
                        title: 'Item ID',
                        field: 'id',
                        rowspan: 2,
                        align: 'center',
                        valign: 'middle',
                        sortable: true
                    }, {
                        title: 'Item Detail',
                        colspan: 3,
                        align: 'center'
                    }
                ],
                [
                    {
                        field: 'name',
                        title: 'Item Name',
                        sortable: true,
                        editable: true,
                        align: 'center'
                    }, {
                        field: 'price',
                        title: 'Item Price',
                        sortable: true,
                        align: 'center',
                        editable: {
                            type: 'text',
                            title: 'Item Price',
                            validate(value) {
                                value = $.trim(value);
                                if (!value) {
                                    return 'This field is required';
                                }
                                if (!/^\\$/.test(value)) {
                                    return 'This field needs to start width $.'
                                }
                                const data = $table.bootstrapTable('getData');
                                const index = $(this).parents('tr').data('index');
                                console.log(data[index]);
                                return '';
                            }
                        },
                        footerFormatter: totalPriceFormatter
                    }, {
                        field: 'operate',
                        title: 'Item Operate',
                        align: 'center',
                        events: operateEvents,
                        formatter: operateFormatter
                    }
                ]
            ]
            });
            // sometimes footer render error.
            setTimeout(() => {
                $table.bootstrapTable('resetView');
            }, 200);
            $table.on('check.bs.table uncheck.bs.table ' +
            'check-all.bs.table uncheck-all.bs.table', () => {
                $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
                // save your data, here just save the current page
                selections = getIdSelections();
                // push or splice the selections if you want to save all data selections
            });
            $table.on('expand-row.bs.table', (e, index, row, $detail) => {
                if (index % 2 == 1) {
                    $detail.html('Loading from ajax request...');
                    $.get('LICENSE', res => {
                        $detail.html(res.replace(/\\n/g, '<br>'));
                    });
                }
            });
            $table.on('all.bs.table', (e, name, args) => {
                console.log(name, args);
            });
            $remove.click(() => {
                const ids = getIdSelections();
                $table.bootstrapTable('remove', {
                    field: 'id',
                    values: ids
                });
                $remove.prop('disabled', true);
            });
            $(window).resize(() => {
                $table.bootstrapTable('resetView', {
                    height: getHeight()
                });
            });
        }
        function getIdSelections() {
            return $.map($table.bootstrapTable('getSelections'), ({id}) => id);
        }
        function responseHandler(res) {
            $.each(res.rows, (i, row) => {
                row.state = $.inArray(row.id, selections) !== -1;
            });
            return res;
        }
        function detailFormatter(index, row) {
            const html = [];
            $.each(row, (key, value) => {
                html.push(`<p><b>${key}:</b> ${value}</p>`);
            });
            return html.join('');
        }
        function operateFormatter(value, row, index) {
            return [
            '<a class="like" href="javascript:void(0)" title="Like">',
            '<i class="glyphicon glyphicon-heart"></i>',
            '</a>  ',
            '<a class="remove" href="javascript:void(0)" title="Remove">',
            '<i class="glyphicon glyphicon-remove"></i>',
            '</a>'
            ].join('');
        }
        window.operateEvents = {
            'click .like': function (e, value, row, index) {
                alert(`You click like action, row: ${JSON.stringify(row)}`);
            },
            'click .remove': function(e, value, {id}, index) {
                $table.bootstrapTable('remove', {
                field: 'id',
                values: [id]
                });
            }
        };
        function totalPriceFormatter(data) {
            let total = 0;
            $.each(data, (i, {price}) => {
                total += +(price.substring(1));
            });
            return `$${total}`;
        }
        function getHeight() {
            return $(window).height() - $('h1').outerHeight(true);
        }
        $(() => {
            initTable();
        })

